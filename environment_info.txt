===== web_env.txt =====
===== Dockerfile =====
FROM nginx:1.28.0-alpine
ARG APP_ENV
WORKDIR /usr/share/nginx/html

# 本番環境のみユーザーを作成
RUN if [ "$APP_ENV" = "production" ]; then \
    addgroup -g 1000 app && \
    adduser -D -u 1000 -G app appuser && \
    chown -R appuser:app /usr/share/nginx/html /etc/nginx /var/log/nginx /var/cache/nginx /run; \
    fi



===== frontend_env.txt =====
===== node -v =====
v20.19.4

===== npm --version =====
10.8.2

===== react version =====
app@0.0.0 /app
+-- react-dom@19.1.0
| `-- react@19.1.0 deduped
+-- react-icons@5.5.0
| `-- react@19.1.0 deduped
+-- react-router-dom@7.6.2
| +-- react-router@7.6.2
| | `-- react@19.1.0 deduped
| `-- react@19.1.0 deduped
`-- react@19.1.0


===== vite version =====
app@0.0.0 /app
+-- @vitejs/plugin-react@4.5.2
| `-- vite@6.3.5 deduped
`-- vite@6.3.5


===== Dockerfile =====
FROM node:20-slim
WORKDIR /app
ARG APP_ENV

# 本番環境のみユーザーを作成
RUN if [ "$APP_ENV" = "production" ]; then \
    if ! getent group 1000 > /dev/null; then addgroup --gid 1000 app; fi; \
    if ! getent passwd 1000 > /dev/null; then adduser --uid 1000 --disabled-password --gecos '' --gid 1000 appuser; fi; \
    mkdir -p /app && \
    chown -R 1000:1000 /app || echo "Warning: chown failed, but continuing"; \
    fi


===== backend_env.txt =====
===== php -v =====
PHP 8.2.0 (cli) (built: Dec  8 2022 19:21:15) (NTS)
Copyright (c) The PHP Group
Zend Engine v4.2.0, Copyright (c) Zend Technologies

===== composer --version =====
Composer version 2.8.10 2025-07-10 19:08:33

===== php artisan --version =====
Laravel Framework 12.19.3

===== Dockerfile =====
FROM php:8.2.0-fpm-alpine
ARG APP_ENV
WORKDIR /var/www/html

# ComposerのインストールとPHP拡張モジュールの追加
RUN apk add --no-cache curl unzip \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && docker-php-ext-install pdo pdo_mysql

# 本番環境のみユーザーを作成
RUN if [ "$APP_ENV" = "production" ]; then \
    adduser -D -u 1000 appuser && \
    chown -R appuser /var/www/html && \
    echo "Switched to appuser"; \
    else \
    echo "Using default root user"; \
    fi


===== docker-compose.yml =====
services:
  # Nginx
  web:
    build:
      context: ./web
      args:
        APP_ENV: ${APP_ENV}
    ports:
      - "8080:80"
      - "8443:443"  # 追加（ローカルHTTPS用）
    volumes:
      - ./frontend/react/dist:/usr/share/nginx/html
      - ./web/certs:/etc/nginx/certs   # 証明書追加
      - ./web/logs:/var/log/nginx

  # React
  frontend:
    build:
      context: ./frontend
      args:
        APP_ENV: ${APP_ENV}
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/react:/app
    ports:
      - "5173:5173"

  # Laravel
  backend:
    build:
      context: ./backend
      args:
        APP_ENV: ${APP_ENV}
    volumes:
      - ./backend/laravel:/var/www/html
      - ./backend/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Tokyo
    volumes:
      - db_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    depends_on:
      - db

volumes:
  db_data:

===== tree -L 3 =====
.
├── README.md
├── Taskfile.yml
├── backend
│   ├── Dockerfile
│   ├── index.php
│   ├── laravel
│   │   ├── README.md
│   │   ├── app
│   │   ├── artisan
│   │   ├── backend_env.txt
│   │   ├── bootstrap
│   │   ├── composer.json
│   │   ├── composer.lock
│   │   ├── config
│   │   ├── database
│   │   ├── package.json
│   │   ├── phpunit.xml
│   │   ├── public
│   │   ├── resources
│   │   ├── routes
│   │   ├── storage
│   │   ├── tests
│   │   ├── vendor
│   │   └── vite.config.js
│   └── php-fpm
│       └── www.conf
├── docker-compose.override.yml
├── docker-compose.prod.yml
├── docker-compose.yml
├── environment_info.txt
├── frontend
│   ├── Dockerfile
│   └── react
│       ├── README.md
│       ├── deps
│       ├── dist
│       ├── eslint.config.js
│       ├── frontend_env.txt
│       ├── index.html
│       ├── node_modules
│       ├── package-lock.json
│       ├── package.json
│       ├── public
│       ├── src
│       ├── tsconfig.json
│       └── vite.config.js
└── web
    ├── Dockerfile
    ├── certs
    │   ├── localhost.crt
    │   └── localhost.key
    ├── conf
    │   ├── default.dev.conf
    │   └── default.prod.conf
    ├── logs
    │   ├── access.log
    │   └── error.log
    ├── public
    │   └── hello.html
    ├── react
    │   └── dist
    └── web_env.txt

28 directories, 35 files

